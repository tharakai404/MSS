@model ABC.customer

@{
    Layout = "~/Views/Shared/_Layout2.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Customer Data</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h3>New customer</h3>
            <h4>Enter Registration details here</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.mobile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Register and Place Order" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

<h3>
    - Or  -
    <br />
    <br />
    Already registered, please login directly here.
</h3>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="col-md-10">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input class="form-control text-box single-line" id="mobileOrEmail" name="mobileOrEmail" type="text" value="" placeholder="Email or Mobile">
                    <br/>
                    <input type="button" onclick="PlaceOrder()" value="Login and Place Order" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    <br />
    <br />
    <br />

</body>
</html>
<script>

    function PlaceOrder() {

         $.ajax(
                {
                    url: '@Url.Action("PlaceOrder", "Cart")',
                    data: {mobileOrEmail : $("#mobileOrEmail").val()},
                    cache: false,
                    type: 'post',
                    dataType: "html",
                    success: successFunc,
                    error: errorFunc
                    });

                    function successFunc(data)
                    {
                        var obj = JSON.parse(data);
                        console.log(obj);

                        window.location.href = "orderplaced/" + obj.id;
                    }

                    function errorFunc(error)
                    {
                        alert('MVC controller call failed.');
                    }
                }
</script>